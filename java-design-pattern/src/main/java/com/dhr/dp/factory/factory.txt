java的三种工厂模式总结
1.简单工厂模式（静态工厂方法模式）
    专门定义一个工厂类,根据外界传递信息来创建不同对象,不同对象具有共同的父类
    缺点：违背了开闭原则,新产品添加需要修改工厂类
2.工厂方法（工厂模式）
    优点：对1的简单抽象化,符合“开闭原则”实现了可扩展
    实现：有一个抽象的创建产品的工厂类,具体的产品实现有子类实现,新增产品只需新增产品实现类即可，符合开闭原则,每个产品都需要实现抽象工厂接口.
    （抽象工厂接口+具体产品实现类）
3.抽象工厂模式
    抽象工厂是应对产品族概念的。比如说，每个汽车公司可能要同时生产轿车，货车，客车，那么每一个工厂都要有创建轿车，货车和客车的方法。
应对产品族概念而生，增加新的产品线很容易，但是无法增加新的产品。
    和工厂方法的区别是，抽象工厂往往有多种方法，可以生产多种产品，即产品簇。
    实现：AbstractFactory产品线抽象工厂接口;产品线实现类（可多个产品线实现类）


